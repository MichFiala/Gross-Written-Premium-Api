// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220809181104_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Domain.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CZ"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DE"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ES"
                        });
                });

            modelBuilder.Entity("Domain.GrossWrittenPremium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("LineOfBusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LineOfBusinessId");

                    b.ToTable("GrossWrittenPremia");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            DateTime = new DateTime(2008, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 1,
                            Value = 100.5
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            DateTime = new DateTime(2010, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 1,
                            Value = 120.5
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            DateTime = new DateTime(2012, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 1,
                            Value = 110.5
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            DateTime = new DateTime(2008, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 2,
                            Value = 10.5
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            DateTime = new DateTime(2010, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 2,
                            Value = 20.5
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            DateTime = new DateTime(2012, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 2,
                            Value = 10.5
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 2,
                            DateTime = new DateTime(2008, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 1,
                            Value = 150.5
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 2,
                            DateTime = new DateTime(2010, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 1,
                            Value = 220.5
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 2,
                            DateTime = new DateTime(2012, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 1,
                            Value = 210.5
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 2,
                            DateTime = new DateTime(2008, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 2,
                            Value = 15.5
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 2,
                            DateTime = new DateTime(2010, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 2,
                            Value = 22.5
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 2,
                            DateTime = new DateTime(2012, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineOfBusinessId = 2,
                            Value = 21.5
                        });
                });

            modelBuilder.Entity("Domain.LineOfBusiness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LineOfBusinesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Retail"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Insurance"
                        });
                });

            modelBuilder.Entity("Domain.GrossWrittenPremium", b =>
                {
                    b.HasOne("Domain.Country", "Country")
                        .WithMany("CountryLineOfBusinesses")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.LineOfBusiness", "LineOfBusiness")
                        .WithMany("CountryLineOfBusinesses")
                        .HasForeignKey("LineOfBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("LineOfBusiness");
                });

            modelBuilder.Entity("Domain.Country", b =>
                {
                    b.Navigation("CountryLineOfBusinesses");
                });

            modelBuilder.Entity("Domain.LineOfBusiness", b =>
                {
                    b.Navigation("CountryLineOfBusinesses");
                });
#pragma warning restore 612, 618
        }
    }
}
